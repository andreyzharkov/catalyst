model_params:
  _key_value: True
  generator:
    model: SimpleGenerator
    noise_dim: 10
  discriminator:
    model: SimpleDiscriminator


args:
  expdir: "examples/mnist_gans"
  logdir: "./examples/logs/minst_gan"


stages:

  data_params:
    batch_size: 64
    num_workers: 1

  state_params:
    num_epochs: 2
    main_metric: &reduce_metric loss
    minimize_metric: True
    runner_phases:
      _valid_mode: "all"  # one of "all" (use all callbacks), "same" (same phases as in train)
      discriminator_train:
#        active_models: ["discriminator"]
        inactive_callbacks: ["optim_g", "loss_g"]
        steps: 1
      generator_train:
#        active_models: ["generator"]
        inactive_callbacks: ["optim_d", "loss_d_fake", "loss_d_real"]
        steps: 1

  criterion_params:
    criterion: BCEWithLogitsLoss

  callbacks_params:
    loss_g:
      callback: CriterionCallback
      input_key: "real_targets"
      output_key: "fake_logits"
      loss_key: loss_g

    loss_d_real:
      callback: CriterionCallback
      input_key: "real_targets"
      output_key: "real_logits"
      loss_key: loss_d_real
    loss_d_fake:
      callback: CriterionCallback
      input_key: "fake_targets"
      output_key: "fake_logits"
      loss_key: loss_d_fake
    optim_g:
      callback: OptimizerCallback
      optimizer_key: generator
      loss_key: loss_g
    optim_d:
      callback: OptimizerCallback
      optimizer_key: discriminator
      loss_key: [loss_d_real, loss_d_fake]
    saver:
      callback: CheckpointCallback

  stage1:

    optimizer_params:
      _key_value: True
      generator:
        optimizer: Adam
        _model: ["generator"]
        lr: 0.0001
      discriminator:
        optimizer: Adam
        _model: ["discriminator"]
        lr: 0.0001
