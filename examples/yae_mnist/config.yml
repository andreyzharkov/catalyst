model_params:
  model: YAE
  ch_in: 1
  n_classes: 10
  implicit_dim: 32
  ch_base: 16


args:
  expdir: "yae_mnist"
  logdir: "./logs/yae_mnist"


stages:

  data_params:
    batch_size: 256
    num_workers: 1

  state_params:
    num_epochs: 50
    main_metric: "loss/loss"
    minimize_metric: True
    checkpoint_data:
      exp: "this is my best experiments"
      date: "today"

  criterion_params:
    _key_value: True
    reconstruction:
      criterion: ReconstructionLoss
    classification:
      criterion: CrossEntropyLoss
    explicit:
      criterion: CrossEntropyLoss
    implicit:
      criterion: PredictionMeanLoss

  scheduler_params:
    scheduler: MultiStepLR
    milestones: [10]
    gamma: 0.3

  callbacks_params:
    loss_reconstruction:
      callback: CriterionCallback
      input_key: "images"
      output_key: "images_a"
      prefix: "loss/reconstruction"
      criterion_key: "reconstruction"
      multiplier: 1.0

    loss_classification:
      callback: CriterionCallback
      input_key: "targets_a"
      output_key: "logits_a"
      prefix: "loss/classification"
      criterion_key: "classification"
      multiplier: 1.0

    loss_explicit:
      callback: CriterionCallback
      input_key: "targets_b"
      output_key: "logits_b"
      prefix: "loss/explicit"
      criterion_key: "explicit"
      multiplier: 1.0

    loss_implicit:
      callback: CriterionCallback
      input_key: "images"  # anything, this key does not matter
      output_key: "implicit_loss"  # already computed loss value key
      prefix: "loss/implicit"
      criterion_key: "implicit"
      multiplier: 1.0

    visualizer:
      callback: VisualizationCallback
      input_keys: "images"
      output_keys: ["images_a", "images_b"]
      n_row: 1
      batch_frequency: 1000
      max_images: 20


    optimizer:
      callback: OptimizerCallback
      prefix: "loss/loss"
    accuracy_classification:
      callback: AccuracyCallback
      accuracy_args: [1, 3, 5]
      input_key: "targets_a"
      output_key: "logits_a"
      prefix: "accuracy/acc"
    accuracy_aux_classification:
      callback: AccuracyCallback
      accuracy_args: [1, 3, 5]
      input_key: "targets_a"
      output_key: "logits_a"
      prefix: "accuracy/aux_acc"
    saver:
      callback: CheckpointCallback
    early_stopping:
      callback: EarlyStoppingCallback
      metric: "loss/loss"
      patience: 10
      minimize: True

  stage1:

    optimizer_params:
      optimizer: Adam
      lr: 0.001
      weight_decay: 0.0001
      no_bias_weight_decay: False # leaves `weight_decay` for model's biases
